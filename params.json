{"name":"VirtualDesktop","tagline":"","body":"**Ibex** 3D Virtual Reality Desktop/Compositing Manager for X11/Linux, Windows and Mac OS\r\n\r\n# About\r\nIbex is a simple 3D Virtual Reality (VR) world that will allow you to have a number of virtual monitors that contain your current actual desktop or the ability to watch movies.  The idea is for you to have a pretty virtual world to work in regardless of where you are\r\nso that you can be flying on a plane, for example, but still be flanked by multiple large high resolution monitors and still be effective rather than be limited by a tiny laptop screen.  In addition, through the eventual use of plugins you can change your environment to suit your needs so you can work in a giant castle or out in a serene field.\r\n\r\nIt currently supports the Rift on Windows and Mac OS and when the SDK is updated Linux as well.  If you have a Razer Hydra you can use it to look and walk around.\r\n\r\nNetworking and multi-user support, physics engine and plugin support are all coming.  Movie playing has gotten intial support on the Mac as well.\r\n\r\n# Home Page and Downloads\r\n\r\nHome page and binaries [http://hwahba.com/ibex](http://hwahba.com/ibex)\r\n\r\n### Launch\r\nDefault simple renderer: ./ibex  \r\nFancy Irrlicht renderer with Quake 3 level: ./ibex -i  \r\nOgre3D renderer with simple terrain and water: ./ibex -o  \r\nDisable Side-by-Side rendering: -m (for mono)  \r\n\r\n### Controls\r\n    Toggle Control Desktop/Move Around World: CTRL+SHIFT+Y, Shift+F1 or CTRL+SHIFT+G (Mac), CTRL+SHIFT+G (Win)\r\n    Look: Move Mouse\r\n    Move Forward: W\r\n    Move Backwards: S\r\n    Walk Sideways Left (Strafe Left): A\r\n    Walk Sideways Right (Strafe Right): D\r\n    Run: Shift\r\n    Jump: SPACE\r\n    Show FPS and Info Dialog: / (Mac and Windows Only)\r\n    Choose movies: Show info dialog with / then press 1 or 2 for regular or stereo movies, then navigate using arrow keys and enter to select a movie\r\n\r\n    Show Help: H\r\n    Toggle Ground Layer: G\r\n    Toggle Barrel Lens Distort: B\r\n    Toggle Display Shape (Spherical/Flat on Windows and Mac only): Q\r\n    Adjust IPD for Rift stereo viewing: -/+ keys\r\n    Razer Hydra: Calibrate by pressing the LT then RT buttons, after that use the thumbsticks to look around and walk forward\r\n\r\nIf using the iPhone controller app (source included) you need to connect to the\r\ncorrect IP for your computer in the iPhone app.  When you hit \"Broadcast\" the\r\norientation of the phone becomes the base orientation and you will start looking\r\naround from there.\r\n\r\n## Requirements\r\n### Mac\r\nXCode 5.0.2+, OSX 10.9 (Mavericks), Intel HD3000 or better (OpenGL 3.3+) - Build and run from XCode, check the project dependencies to find out where the bullet3d physics library and sixense SDK need to go to build properly.  OculusSDK needs to be placed at the same level as your checked-out git repo for ibex and it must be version 0.2.5 or later.  You'll need to rebuild the libovr.a library with C++ RTTI and Exceptions enabled or else it won't link properly with ibex.\r\n\r\nThe [Oculus SDK](https://developer.oculusvr.com) and [sixense SDK](http://sixense.com/developers) must be installed at the same level as the ibex repository directory:\r\n\r\n    * Parent Directory:\r\n    |\r\n    |->ibex\r\n       |...\r\n       |->IbexMac\r\n       |->IbexWin\r\n    |\r\n    |->sixenseSDK_linux_OSX\r\n    |\r\n    |->OculusSDK\r\n\r\nFor math and video support you need to install the following:\r\n\r\n    brew install --build-bottle glm assimp freetype\r\n    \r\n    brew install --build-bottle x264 xvid yasm faac\r\n    brew install --build-bottle ffmpeg --use-clang\r\n    brew tap homebrew/science\r\n    brew install --build-bottle opencv --env=std\r\n    brew install --build-bottle glfw3\r\n\r\n    # complete list of packages I have installed, probably don't need them all\r\n    brew install --build-bottle assimp freetype glm jpeg boost gmp lame libtool pkg-config xz cmake lua yasm faac glfw3 imagemagick libpng mad opencv\r\n    \r\nbullet physics how to build:\r\n\r\n    cd ~/Downloads/bullet-2.81-rev2613\r\n    mkdir bullet-build\r\n    cd bullet-build\r\n    cmake .. -G \"Unix Makefiles\" -DINSTALL_LIBS=ON #-DBUILD_SHARED_LIBS=ON                                                                                                                   \r\n    make -j4\r\n    sudo make install\r\n    \r\nUpdated cmake install method for regular build:\r\n\r\n\t# at the same level as the ibex checkout directory\r\n    mkdir build\r\n    cmake -DCMAKE_INSTALL_PREFIX:PATH=`pwd` ../ibex/IbexMac\r\n    # or with Ogre\r\n    # cmake -DCMAKE_INSTALL_PREFIX:PATH=`pwd` ../ibex/IbexMac -DOGRE=1\r\n    make install\r\nor\r\n\r\n\t# at the same level as the ibex checkout directory\r\n\tmkdir build\r\n    cmake -DCMAKE_INSTALL_PREFIX:PATH=`pwd` ../ibex/IbexMac -G Xcode\r\n    # or with Ogre\r\n    # cmake -DCMAKE_INSTALL_PREFIX:PATH=`pwd` ../ibex/IbexMac -DOGRE=1 -G Xcode\r\n    # switch to the ibex_run target and hit Command+B\r\n\r\n### Windows\r\nVisual Studio 2012 - Build and run from Visual Studio, Rift SDK must be at same level as ibex folder and named: OculusSDK.\r\n\r\nYou also need to have ffmpeg installed where VS can find it.  I recommend the builds from ([http://ffmpeg.zeranoe.com/builds](http://ffmpeg.zeranoe.com/builds/ \"http://ffmpeg.zeranoe.com/builds/\")).  You should download the 32-bit shared and dev builds and extract them at the same level as ibex.\r\n\r\nThe [Oculus SDK](https://developer.oculusvr.com) and [sixense SDK](http://sixense.com/developers) must also be extracted at the same level as your repository.\r\n\r\nYour directory structure should look like:\r\n\r\n    * Parent Directory:\r\n    |\r\n    |->ibex\r\n       |...\r\n       |->IbexMac\r\n       |->IbexWin\r\n    |->ffmpeg\r\n       |\r\n       |->lib\r\n    |->ffmpeg-shared\r\n       |\r\n       |->bin\r\n    |->OculusSDK\r\n\r\n### Linux\r\nSetting up my Ubuntu 13.04 install:\r\n\r\n    sudo apt-get install mesa-utils eclipse-cdt freeglut3-dev glew-utils libglew1.6-dev libxrender-dev libxrender1-dbg libxrender1 libxdamage-dev libxdamage1-dbg libxcomposite1-dbg libxcomposite-dev libxxf86vm-dev libxxf86vm1-dbg libxcb1-dev libxrandr-dev libxft-dev libx11-xcb-dev libxi-dev libxinerama-dev cmake\r\n    sudo apt-get install libtinyxml-dev\r\n    sudo apt-get install nvidia-current-updates-dev\r\n    sudo apt-get install libirrlicht-dev\r\n    sudo apt-get install libjpeg62-dev libboost1.53-all-dev\r\n    sudo apt-get install libudev-dev libopenal-dev\r\n\r\n    sudo add-apt-repository ppa:jon-severinsson/ffmpeg\r\n    sudo apt-get install libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libswscale-dev libavutil-dev libx264-dev libswresample-dev # ffmpeg 0.10.7\r\n    sudo apt-get install libopencv-dev\r\n\r\n* Blender\r\n* Blender2Ogre to convert models to Ogre meshes: [Blender2Ogre](https://code.google.com/p/blender2ogre/)\r\n \r\nTo run:  \r\n\r\n    cd ~/workspace  \r\n    mkdir build  \r\n    cd build  \r\n    cmake ../ibex  \r\n    make install  \r\n    ./ibex  \r\n\r\n----\r\n\r\nAuthor: Hesham Wahba ([http://hwahba.com](http://hwahba.com))  \r\nCopyright Hesham Wahba 2012,2013","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}